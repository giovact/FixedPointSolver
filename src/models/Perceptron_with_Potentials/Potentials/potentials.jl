#######################################################################################################################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################
########################################################################### PERCEPTRON RULE ###########################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################

########################################################################## V(Δ) = Θ(-Δ) ##########################################################################
struct TSGibbs <:Potential
    storage::Bool
end

TSGibbs() = TSGibbs(false)



#######################################################################################################################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################
########################################################################### PERCEPTRON RULE ###########################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################

########################################################################## V(Δ) = -Δ × Θ(-Δ) ##########################################################################
struct TSPerceptron <:Potential  # for the moment remove stability
    storage::Bool
end
TSPerceptron() = TSPerceptron(false)


function set_rule(s::String;storage::Bool = false)
    s=="TSGibbs" && return TSGibbs(storage)
    s=="TSPerceptron" && return TSPerceptron(storage)
    throw("SELECT VALID LEARNING RULE")
end

function str(P::PT) where PT<: Potential

    if P.storage
        return string(typeof(P), "_storage")
    else
        return string(typeof(P))
    end
end